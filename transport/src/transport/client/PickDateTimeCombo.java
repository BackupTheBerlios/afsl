/*
 * PickDateTimeCombo.java
 *
 * Created on June 26, 2004, 4:31 PM
 */

package transport.client;

import java.text.*;
import java.util.*;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

/**
 *
 * @author  ola
 */
public class PickDateTimeCombo extends javax.swing.JPanel {
	private PickDateTime pickDateTime;
	private JWindow pdtWin;

	/** Creates new form PickDateTimeCombo */
	public PickDateTimeCombo() {
		pickDateTime=new PickDateTime();
		jbInit();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	private void jbInit() { //GEN-BEGIN:jbInit
		dateField=new javax.swing.JFormattedTextField(DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, new Locale("sv")));
		dateField.setValue(new Date());

		setLayout(borderLayout1);



		dateField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
		nowButton.setToolTipText("");
    nowButton.setActionCommand("jButton1");
    nowButton.setMnemonic('N');
    nowButton.setText("N");
    nowButton.addActionListener(new PickDateTimeCombo_nowButton_actionAdapter(this));
    this.setDebugGraphicsOptions(0);
    emptyButton.setMnemonic('E');
    emptyButton.setText("E");
    emptyButton.addActionListener(new PickDateTimeCombo_emptyButton_actionAdapter(this));
    jPanel1.setLayout(gridBagLayout1);
    add(dateField,  BorderLayout.CENTER);
    this.add(jPanel1,  BorderLayout.EAST);
    jPanel1.add(nowButton,    new GridBagConstraints(0, 0, 1, 1, 0.0, 0.0
            ,GridBagConstraints.CENTER, GridBagConstraints.NONE, new Insets(2, 5, 1, 0), 0, -4));
    jPanel1.add(emptyButton,    new GridBagConstraints(1, 0, 1, 1, 0.0, 0.0
            ,GridBagConstraints.CENTER, GridBagConstraints.NONE, new Insets(2, 0, 1, 5), 0, -4));

	} //GEN-END:jbInit

	private void launchPickDateTimeActionPerformed(java.awt.event.ActionEvent
		evt) { //GEN-FIRST:event_launchPickDateTimeActionPerformed
		if (pdtWin == null) {
			PickDateTime pdt=new PickDateTime();
			Window w=(Window)this.getTopLevelAncestor();
			pdtWin=new JWindow(w);
			JPanel contentPane=(JPanel)pdtWin.getContentPane();
			contentPane.setLayout(new BorderLayout());
			contentPane.add(pdt);
			pdtWin.pack();
		}

		if (pdtWin.isVisible()) {
			pdtWin.setVisible(false);
			return;
		}

		Point p=this.getLocationOnScreen();
		pdtWin.setBounds((int)p.getX(), (int)p.getY() + this.getHeight(),
						 300, 300);
		pdtWin.setVisible(true);
	} //GEN-LAST:event_launchPickDateTimeActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JFormattedTextField dateField;
  JButton nowButton = new JButton();
  BorderLayout borderLayout1 = new BorderLayout();
  JButton emptyButton = new JButton();
  JPanel jPanel1 = new JPanel();
  GridBagLayout gridBagLayout1 = new GridBagLayout();

	void launchPickDateTime_mouseClicked(MouseEvent e) {
		Window anc=(Window)this.getTopLevelAncestor();
		JWindow pickDateTimeWindow=new JWindow(anc);
		JPanel contentPane=(JPanel)pickDateTimeWindow.getContentPane();
		contentPane.add(pickDateTime);
	}

	public Date getDate() {
		if (dateField.getText().compareTo("")==0) {
			return null;
		}

		try {
			return DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, new Locale("sv")).parse(dateField.getText());
		} catch (ParseException ex) {
			// Will not happen. Text field is formatted automagically.
			ex.printStackTrace();
			return null;
		}
	}

	public void setDate(Date newDate) {
		if (newDate==null) {
			dateField.setText("");
		} else {
			dateField.setText(DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, new Locale("sv")).format(newDate));
		}
	}

  void nowButton_actionPerformed(ActionEvent e) {
	  dateField.setText(DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, new Locale("sv")).format(new Date()));
  }

  void emptyButton_actionPerformed(ActionEvent e) {
	  dateField.setText("");
  }

	// End of variables declaration//GEN-END:variables
}

class PickDateTimeCombo_nowButton_actionAdapter implements java.awt.event.ActionListener {
  PickDateTimeCombo adaptee;

  PickDateTimeCombo_nowButton_actionAdapter(PickDateTimeCombo adaptee) {
    this.adaptee = adaptee;
  }
  public void actionPerformed(ActionEvent e) {
    adaptee.nowButton_actionPerformed(e);
  }
}

class PickDateTimeCombo_emptyButton_actionAdapter implements java.awt.event.ActionListener {
  PickDateTimeCombo adaptee;

  PickDateTimeCombo_emptyButton_actionAdapter(PickDateTimeCombo adaptee) {
    this.adaptee = adaptee;
  }
  public void actionPerformed(ActionEvent e) {
    adaptee.emptyButton_actionPerformed(e);
  }
}
