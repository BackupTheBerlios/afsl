/*
 * Artist.java
 *
 * Created on June 12, 2004, 6:04 PM
 */

package transport.client;

import transport.logic.*;
import transport.server.*;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author  ola
 */
public class ArtistFrame extends javax.swing.JInternalFrame {
	ArtistFactory af;

	/** Creates new form Artist */
	public ArtistFrame() {
		af=new ArtistFactory();
		jbInit();
	}

	private AbstractTableModel newTableModel() {
		return new AbstractTableModel() {
			private Artist[] rowData=af.getAllArtists();

			public Artist getRowData(int row) {
				return rowData[row];
			}

			public String getColumnName(int col) {
				switch (col) {
				case 0:
					return "Name";
				case 1:
					return "Contact name";
				case 2:
					return "Telephone number";
				case 3:
					return "Arrival";
				case 4:
					return "Arrival time";
				case 5:
					return "Hotel";
				case 6:
					return "Departure";
				case 7:
					return "Departure Time";
				case 8:
					return "No of Artists";
				case 9:
					return "No of Crew";
				case 10:
					return "No of Guests";
				}

				return "FIXME";
			}

			public int getRowCount() { return rowData.length; }
			public int getColumnCount() { return 11; }
			public Object getValueAt(int row, int col) {
				switch (col) {
				case 0:
					return rowData[row].getName();
				case 1:
					return rowData[row].getContactName();
				case 2:
					return rowData[row].getTelephoneNo();
				case 3:
					return rowData[row].getArrival();
				case 4:
					return rowData[row].getArrivalTime();
				case 5:
					return rowData[row].getHotel();
				case 6:
					return rowData[row].getDeparture();
				case 7:
					return rowData[row].getDepartureTime();
				case 8:
					return new Integer(rowData[row].getNoOfArtists());
				case 9:
					return new Integer(rowData[row].getNoOfCrew());
				case 10:
					return new Integer(rowData[row].getNoOfGuests());
				}

				// FIXME: should not happen. Log error if it does.

				return null;
			}

			public boolean isCellEditable(int row, int col) { return false; }

			public void setValueAt(Object value, int row, int col) {
				fireTableCellUpdated(row, col);
			}
		};
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
        private void jbInit() {//GEN-BEGIN:jbInit
                jScrollPane1 = new javax.swing.JScrollPane();
                artistTable = new javax.swing.JTable();

                setClosable(true);
                setResizable(true);
                setTitle("Listing of artists");
                setAutoscrolls(true);
                artistTable.setModel(newTableModel());
                artistTable.setToolTipText("Artists");
                artistTable.setCellSelectionEnabled(true);
                artistTable.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                artistTableMouseClicked(evt);
                        }
                });

                jScrollPane1.setViewportView(artistTable);

                getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

                pack();
        }//GEN-END:jbInit

	private void artistTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_artistTableMouseClicked
		if (evt.getClickCount()==2) {
			//ArtistEditor ae=new ArtistEditor(artistTable.getModel().getRowData(artistTable.getSelectedRow()));
		}
	}//GEN-LAST:event_artistTableMouseClicked


        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JTable artistTable;
        private javax.swing.JScrollPane jScrollPane1;
        // End of variables declaration//GEN-END:variables

}
