/*
 * Artist.java
 *
 * Created on June 12, 2004, 6:04 PM
 */

package transport.src.transport.client;

import transport.logic.*;
import transport.server.*;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author  ola
 */
public class Artist extends javax.swing.JInternalFrame {
	
	/** Creates new form Artist */
	public Artist() {
		ArtistFactory af=new ArtistFactory();
		initComponents();
		Artist[] ar=af.getAllArtists();
		
	}
	
	private AbstractTableModel newTableModel() {
		return new AbstractTableModel() {
			public String getColumnName(int col) {
				switch (col) {
				case 1:
					return "Name";
				case 2:
					return "Contact name";
				case 3:
					return "Telephone number";
				case 4:
					return "Arrival";
				case 5:
					return "Arrival time";
				case 6:
					return;
				}
			}

			public int getRowCount() { return rowData.length; }
			public int getColumnCount() { return columnNames.length; }
			public Object getValueAt(int row, int col) {
				return rowData[row][col];
			}

			public boolean isCellEditable(int row, int col) { return true; }
			public void setValueAt(Object value, int row, int col) {
				rowData[row][col] = value;
				fireTableCellUpdated(row, col);
			}
		};
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
        private void initComponents() {//GEN-BEGIN:initComponents
                ArtistTable = new javax.swing.JTable();

                getContentPane().setLayout(new java.awt.GridBagLayout());

                ArtistTable.setModel(newTableModel());
                ArtistTable.setToolTipText("Artists");
                getContentPane().add(ArtistTable, new java.awt.GridBagConstraints());

                pack();
        }//GEN-END:initComponents
	
	
        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JTable ArtistTable;
        // End of variables declaration//GEN-END:variables
	
}
