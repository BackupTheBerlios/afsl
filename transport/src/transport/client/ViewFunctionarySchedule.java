/*
 * ViewFunctionarySchedule.java
 *
 * Created on June 30, 2004, 1:14 AM
 */

package transport.client;

import transport.logic.Functionary;
import transport.server.FunctionaryFactory;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import transport.client.tablemodel.ViewTransportByFunctionaryTableModel;

/**
 *
 * @author  ola
 */
public class ViewFunctionarySchedule
    extends javax.swing.JInternalFrame {
  private Functionary[] rowData;
  private FunctionaryFactory af;
  JPanel jPanel1 = new JPanel();
  afslComboBox comboSelectFunctionary = new afslComboBox();
  JButton buttonClose = new JButton();
  GridLayout gridLayout1 = new GridLayout();
  ViewTransportByFunctionaryTableModel tableModel;
private javax.swing.JScrollPane jScrollPane1;
  /** Creates new form ViewFunctionarySchedule */
  private JTable objectTable;
  public ViewFunctionarySchedule() {
    af = new FunctionaryFactory();
    rowData = af.getAllFunctionaries();
    System.out.print("Number of Functionaries:" + rowData.length);
    jbInit();
  }

  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  private void jbInit() { //GEN-BEGIN:jbInit
    ImageIcon frameIcon = new ImageIcon(this.getClass().getResource(
        "../pics/miniAF.png"));
    this.setFrameIcon(frameIcon);
    this.setResizable(true);
    this.setPreferredSize(new Dimension(400, 400));

    pack();
    jScrollPane1=new javax.swing.JScrollPane();
    buttonClose.setText("Close");
    buttonClose.addActionListener(new
        ViewFunctionarySchedule_buttonClose_actionAdapter(this));
    jPanel1.setLayout(gridLayout1);
    comboSelectFunctionary.addActionListener(new ViewFunctionarySchedule_comboSelectFunctionary_actionAdapter(this));
    this.getContentPane().add(jPanel1, BorderLayout.NORTH);
    jPanel1.add(comboSelectFunctionary, null);
    this.getContentPane().add(buttonClose, BorderLayout.SOUTH);
    comboSelectFunctionary.fillCombo(rowData);
    initTable();
    getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);
  }

  void buttonClose_actionPerformed(ActionEvent e) {
    this.dispose();
  } //GEN-END:jbInit

  // Variables declaration - do not modify//GEN-BEGIN:variables
  // End of variables declaration//GEN-END:variables
  private void initTable() {
    objectTable = new javax.swing.JTable();

    objectTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    objectTable.setRowSelectionAllowed(true);
    objectTable.setCellSelectionEnabled(false);
    objectTable.setColumnSelectionAllowed(false);

    setClosable(true);
    this.setMaximizable(true);
    setResizable(true);

    setAutoscrolls(true);
    tableModel=new ViewTransportByFunctionaryTableModel(getCurrentFunctionaryID());
    objectTable.setModel(tableModel);
    objectTable.setCellSelectionEnabled(true);
    jScrollPane1.setViewportView(objectTable);
  }
  private int getCurrentFunctionaryID() {

       return ( (Functionary) comboSelectFunctionary.
               getSelectedItem()).getId();
   }

  void comboSelectFunctionary_actionPerformed(ActionEvent e) {
    initTable();
  }

}

class ViewFunctionarySchedule_buttonClose_actionAdapter
    implements java.awt.event.ActionListener {
  ViewFunctionarySchedule adaptee;

  ViewFunctionarySchedule_buttonClose_actionAdapter(ViewFunctionarySchedule
      adaptee) {
    this.adaptee = adaptee;
  }

  public void actionPerformed(ActionEvent e) {
    adaptee.buttonClose_actionPerformed(e);
  }
}

class ViewFunctionarySchedule_comboSelectFunctionary_actionAdapter implements java.awt.event.ActionListener {
  ViewFunctionarySchedule adaptee;

  ViewFunctionarySchedule_comboSelectFunctionary_actionAdapter(ViewFunctionarySchedule adaptee) {
    this.adaptee = adaptee;
  }
  public void actionPerformed(ActionEvent e) {
    adaptee.comboSelectFunctionary_actionPerformed(e);
  }
}